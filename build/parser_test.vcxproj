<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="15.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|Win32">
      <Configuration>Debug</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|Win32">
      <Configuration>Release</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="MinSizeRel|Win32">
      <Configuration>MinSizeRel</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="RelWithDebInfo|Win32">
      <Configuration>RelWithDebInfo</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <ProjectGuid>{8657D4E1-38FE-38FD-8AC2-1142854668DA}</ProjectGuid>
    <Keyword>Win32Proj</Keyword>
    <WindowsTargetPlatformVersion>10.0.17763.0</WindowsTargetPlatformVersion>
    <Platform>Win32</Platform>
    <ProjectName>parser_test</ProjectName>
    <VCProjectUpgraderObjectName>NoUpgrade</VCProjectUpgraderObjectName>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v141</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v141</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v141</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v141</PlatformToolset>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
  </ImportGroup>
  <ImportGroup Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup>
    <_ProjectFileVersion>10.0.20506.1</_ProjectFileVersion>
    <OutDir Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">E:\Cpp_TEST\my_json_parser\build\Debug\</OutDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">parser_test.dir\Debug\</IntDir>
    <TargetName Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">parser_test</TargetName>
    <TargetExt Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">.exe</TargetExt>
    <LinkIncremental Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">true</LinkIncremental>
    <GenerateManifest Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">true</GenerateManifest>
    <OutDir Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">E:\Cpp_TEST\my_json_parser\build\Release\</OutDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">parser_test.dir\Release\</IntDir>
    <TargetName Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">parser_test</TargetName>
    <TargetExt Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">.exe</TargetExt>
    <LinkIncremental Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">false</LinkIncremental>
    <GenerateManifest Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">true</GenerateManifest>
    <OutDir Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">E:\Cpp_TEST\my_json_parser\build\MinSizeRel\</OutDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">parser_test.dir\MinSizeRel\</IntDir>
    <TargetName Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">parser_test</TargetName>
    <TargetExt Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">.exe</TargetExt>
    <LinkIncremental Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">false</LinkIncremental>
    <GenerateManifest Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">true</GenerateManifest>
    <OutDir Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">E:\Cpp_TEST\my_json_parser\build\RelWithDebInfo\</OutDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">parser_test.dir\RelWithDebInfo\</IntDir>
    <TargetName Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">parser_test</TargetName>
    <TargetExt Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">.exe</TargetExt>
    <LinkIncremental Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">true</LinkIncremental>
    <GenerateManifest Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">true</GenerateManifest>
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <ClCompile>
      <AdditionalIncludeDirectories>E:\Cpp_TEST\my_json_parser\build\_deps\googletest-src\googletest\include;E:\Cpp_TEST\my_json_parser\build\_deps\googletest-src\googletest;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>
      <BasicRuntimeChecks>EnableFastChecks</BasicRuntimeChecks>
      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
      <ExceptionHandling>Sync</ExceptionHandling>
      <InlineFunctionExpansion>Disabled</InlineFunctionExpansion>
      <Optimization>Disabled</Optimization>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <RuntimeTypeInfo>true</RuntimeTypeInfo>
      <UseFullPaths>false</UseFullPaths>
      <PreprocessorDefinitions>%(PreprocessorDefinitions);WIN32;_WINDOWS;CMAKE_INTDIR="Debug"</PreprocessorDefinitions>
      <ObjectFileName>$(IntDir)</ObjectFileName>
    </ClCompile>
    <ResourceCompile>
      <PreprocessorDefinitions>%(PreprocessorDefinitions);WIN32;_DEBUG;_WINDOWS;CMAKE_INTDIR=\"Debug\"</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>E:\Cpp_TEST\my_json_parser\build\_deps\googletest-src\googletest\include;E:\Cpp_TEST\my_json_parser\build\_deps\googletest-src\googletest;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
    <Midl>
      <AdditionalIncludeDirectories>E:\Cpp_TEST\my_json_parser\build\_deps\googletest-src\googletest\include;E:\Cpp_TEST\my_json_parser\build\_deps\googletest-src\googletest;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
    <PostBuildEvent>
      <Message></Message>
      <Command>setlocal
E:\CMake\bin\cmake.exe -D TEST_TARGET=parser_test -D TEST_EXECUTABLE=E:/Cpp_TEST/my_json_parser/build/Debug/parser_test.exe -D TEST_EXECUTOR= -D TEST_WORKING_DIR=E:/Cpp_TEST/my_json_parser/build -D TEST_EXTRA_ARGS= -D TEST_PROPERTIES= -D TEST_PREFIX= -D TEST_SUFFIX= -D TEST_FILTER= -D NO_PRETTY_TYPES=FALSE -D NO_PRETTY_VALUES=FALSE -D TEST_LIST=parser_test_TESTS -D CTEST_FILE=E:/Cpp_TEST/my_json_parser/build/parser_test[1]_tests.cmake -D TEST_DISCOVERY_TIMEOUT=5 -D TEST_XML_OUTPUT_DIR= -P E:/CMake/share/cmake-3.23/Modules/GoogleTestAddTests.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
    </PostBuildEvent>
    <Link>
      <AdditionalDependencies>lib\Debug\gtest_maind.lib;lib\Debug\gtestd.lib;kernel32.lib;user32.lib;gdi32.lib;winspool.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;comdlg32.lib;advapi32.lib</AdditionalDependencies>
      <AdditionalLibraryDirectories>%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalOptions>%(AdditionalOptions) /machine:X86</AdditionalOptions>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <IgnoreSpecificDefaultLibraries>%(IgnoreSpecificDefaultLibraries)</IgnoreSpecificDefaultLibraries>
      <ImportLibrary>E:/Cpp_TEST/my_json_parser/build/Debug/parser_test.lib</ImportLibrary>
      <ProgramDataBaseFile>E:/Cpp_TEST/my_json_parser/build/Debug/parser_test.pdb</ProgramDataBaseFile>
      <SubSystem>Console</SubSystem>
    </Link>
    <ProjectReference>
      <LinkLibraryDependencies>false</LinkLibraryDependencies>
    </ProjectReference>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <ClCompile>
      <AdditionalIncludeDirectories>E:\Cpp_TEST\my_json_parser\build\_deps\googletest-src\googletest\include;E:\Cpp_TEST\my_json_parser\build\_deps\googletest-src\googletest;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>
      <ExceptionHandling>Sync</ExceptionHandling>
      <InlineFunctionExpansion>AnySuitable</InlineFunctionExpansion>
      <Optimization>MaxSpeed</Optimization>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <RuntimeTypeInfo>true</RuntimeTypeInfo>
      <UseFullPaths>false</UseFullPaths>
      <PreprocessorDefinitions>%(PreprocessorDefinitions);WIN32;_WINDOWS;NDEBUG;CMAKE_INTDIR="Release"</PreprocessorDefinitions>
      <ObjectFileName>$(IntDir)</ObjectFileName>
      <DebugInformationFormat>
      </DebugInformationFormat>
    </ClCompile>
    <ResourceCompile>
      <PreprocessorDefinitions>%(PreprocessorDefinitions);WIN32;_WINDOWS;NDEBUG;CMAKE_INTDIR=\"Release\"</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>E:\Cpp_TEST\my_json_parser\build\_deps\googletest-src\googletest\include;E:\Cpp_TEST\my_json_parser\build\_deps\googletest-src\googletest;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
    <Midl>
      <AdditionalIncludeDirectories>E:\Cpp_TEST\my_json_parser\build\_deps\googletest-src\googletest\include;E:\Cpp_TEST\my_json_parser\build\_deps\googletest-src\googletest;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
    <PostBuildEvent>
      <Message></Message>
      <Command>setlocal
E:\CMake\bin\cmake.exe -D TEST_TARGET=parser_test -D TEST_EXECUTABLE=E:/Cpp_TEST/my_json_parser/build/Release/parser_test.exe -D TEST_EXECUTOR= -D TEST_WORKING_DIR=E:/Cpp_TEST/my_json_parser/build -D TEST_EXTRA_ARGS= -D TEST_PROPERTIES= -D TEST_PREFIX= -D TEST_SUFFIX= -D TEST_FILTER= -D NO_PRETTY_TYPES=FALSE -D NO_PRETTY_VALUES=FALSE -D TEST_LIST=parser_test_TESTS -D CTEST_FILE=E:/Cpp_TEST/my_json_parser/build/parser_test[1]_tests.cmake -D TEST_DISCOVERY_TIMEOUT=5 -D TEST_XML_OUTPUT_DIR= -P E:/CMake/share/cmake-3.23/Modules/GoogleTestAddTests.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
    </PostBuildEvent>
    <Link>
      <AdditionalDependencies>lib\Release\gtest_main.lib;lib\Release\gtest.lib;kernel32.lib;user32.lib;gdi32.lib;winspool.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;comdlg32.lib;advapi32.lib</AdditionalDependencies>
      <AdditionalLibraryDirectories>%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalOptions>%(AdditionalOptions) /machine:X86</AdditionalOptions>
      <GenerateDebugInformation>false</GenerateDebugInformation>
      <IgnoreSpecificDefaultLibraries>%(IgnoreSpecificDefaultLibraries)</IgnoreSpecificDefaultLibraries>
      <ImportLibrary>E:/Cpp_TEST/my_json_parser/build/Release/parser_test.lib</ImportLibrary>
      <ProgramDataBaseFile>E:/Cpp_TEST/my_json_parser/build/Release/parser_test.pdb</ProgramDataBaseFile>
      <SubSystem>Console</SubSystem>
    </Link>
    <ProjectReference>
      <LinkLibraryDependencies>false</LinkLibraryDependencies>
    </ProjectReference>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">
    <ClCompile>
      <AdditionalIncludeDirectories>E:\Cpp_TEST\my_json_parser\build\_deps\googletest-src\googletest\include;E:\Cpp_TEST\my_json_parser\build\_deps\googletest-src\googletest;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>
      <ExceptionHandling>Sync</ExceptionHandling>
      <InlineFunctionExpansion>OnlyExplicitInline</InlineFunctionExpansion>
      <Optimization>MinSpace</Optimization>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <RuntimeTypeInfo>true</RuntimeTypeInfo>
      <UseFullPaths>false</UseFullPaths>
      <PreprocessorDefinitions>%(PreprocessorDefinitions);WIN32;_WINDOWS;NDEBUG;CMAKE_INTDIR="MinSizeRel"</PreprocessorDefinitions>
      <ObjectFileName>$(IntDir)</ObjectFileName>
      <DebugInformationFormat>
      </DebugInformationFormat>
    </ClCompile>
    <ResourceCompile>
      <PreprocessorDefinitions>%(PreprocessorDefinitions);WIN32;_WINDOWS;NDEBUG;CMAKE_INTDIR=\"MinSizeRel\"</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>E:\Cpp_TEST\my_json_parser\build\_deps\googletest-src\googletest\include;E:\Cpp_TEST\my_json_parser\build\_deps\googletest-src\googletest;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
    <Midl>
      <AdditionalIncludeDirectories>E:\Cpp_TEST\my_json_parser\build\_deps\googletest-src\googletest\include;E:\Cpp_TEST\my_json_parser\build\_deps\googletest-src\googletest;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
    <PostBuildEvent>
      <Message></Message>
      <Command>setlocal
E:\CMake\bin\cmake.exe -D TEST_TARGET=parser_test -D TEST_EXECUTABLE=E:/Cpp_TEST/my_json_parser/build/MinSizeRel/parser_test.exe -D TEST_EXECUTOR= -D TEST_WORKING_DIR=E:/Cpp_TEST/my_json_parser/build -D TEST_EXTRA_ARGS= -D TEST_PROPERTIES= -D TEST_PREFIX= -D TEST_SUFFIX= -D TEST_FILTER= -D NO_PRETTY_TYPES=FALSE -D NO_PRETTY_VALUES=FALSE -D TEST_LIST=parser_test_TESTS -D CTEST_FILE=E:/Cpp_TEST/my_json_parser/build/parser_test[1]_tests.cmake -D TEST_DISCOVERY_TIMEOUT=5 -D TEST_XML_OUTPUT_DIR= -P E:/CMake/share/cmake-3.23/Modules/GoogleTestAddTests.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
    </PostBuildEvent>
    <Link>
      <AdditionalDependencies>lib\MinSizeRel\gtest_main.lib;lib\MinSizeRel\gtest.lib;kernel32.lib;user32.lib;gdi32.lib;winspool.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;comdlg32.lib;advapi32.lib</AdditionalDependencies>
      <AdditionalLibraryDirectories>%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalOptions>%(AdditionalOptions) /machine:X86</AdditionalOptions>
      <GenerateDebugInformation>false</GenerateDebugInformation>
      <IgnoreSpecificDefaultLibraries>%(IgnoreSpecificDefaultLibraries)</IgnoreSpecificDefaultLibraries>
      <ImportLibrary>E:/Cpp_TEST/my_json_parser/build/MinSizeRel/parser_test.lib</ImportLibrary>
      <ProgramDataBaseFile>E:/Cpp_TEST/my_json_parser/build/MinSizeRel/parser_test.pdb</ProgramDataBaseFile>
      <SubSystem>Console</SubSystem>
    </Link>
    <ProjectReference>
      <LinkLibraryDependencies>false</LinkLibraryDependencies>
    </ProjectReference>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">
    <ClCompile>
      <AdditionalIncludeDirectories>E:\Cpp_TEST\my_json_parser\build\_deps\googletest-src\googletest\include;E:\Cpp_TEST\my_json_parser\build\_deps\googletest-src\googletest;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>
      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
      <ExceptionHandling>Sync</ExceptionHandling>
      <InlineFunctionExpansion>OnlyExplicitInline</InlineFunctionExpansion>
      <Optimization>MaxSpeed</Optimization>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <RuntimeTypeInfo>true</RuntimeTypeInfo>
      <UseFullPaths>false</UseFullPaths>
      <PreprocessorDefinitions>%(PreprocessorDefinitions);WIN32;_WINDOWS;NDEBUG;CMAKE_INTDIR="RelWithDebInfo"</PreprocessorDefinitions>
      <ObjectFileName>$(IntDir)</ObjectFileName>
    </ClCompile>
    <ResourceCompile>
      <PreprocessorDefinitions>%(PreprocessorDefinitions);WIN32;_WINDOWS;NDEBUG;CMAKE_INTDIR=\"RelWithDebInfo\"</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>E:\Cpp_TEST\my_json_parser\build\_deps\googletest-src\googletest\include;E:\Cpp_TEST\my_json_parser\build\_deps\googletest-src\googletest;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
    <Midl>
      <AdditionalIncludeDirectories>E:\Cpp_TEST\my_json_parser\build\_deps\googletest-src\googletest\include;E:\Cpp_TEST\my_json_parser\build\_deps\googletest-src\googletest;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
    <PostBuildEvent>
      <Message></Message>
      <Command>setlocal
E:\CMake\bin\cmake.exe -D TEST_TARGET=parser_test -D TEST_EXECUTABLE=E:/Cpp_TEST/my_json_parser/build/RelWithDebInfo/parser_test.exe -D TEST_EXECUTOR= -D TEST_WORKING_DIR=E:/Cpp_TEST/my_json_parser/build -D TEST_EXTRA_ARGS= -D TEST_PROPERTIES= -D TEST_PREFIX= -D TEST_SUFFIX= -D TEST_FILTER= -D NO_PRETTY_TYPES=FALSE -D NO_PRETTY_VALUES=FALSE -D TEST_LIST=parser_test_TESTS -D CTEST_FILE=E:/Cpp_TEST/my_json_parser/build/parser_test[1]_tests.cmake -D TEST_DISCOVERY_TIMEOUT=5 -D TEST_XML_OUTPUT_DIR= -P E:/CMake/share/cmake-3.23/Modules/GoogleTestAddTests.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
    </PostBuildEvent>
    <Link>
      <AdditionalDependencies>lib\RelWithDebInfo\gtest_main.lib;lib\RelWithDebInfo\gtest.lib;kernel32.lib;user32.lib;gdi32.lib;winspool.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;comdlg32.lib;advapi32.lib</AdditionalDependencies>
      <AdditionalLibraryDirectories>%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalOptions>%(AdditionalOptions) /machine:X86</AdditionalOptions>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <IgnoreSpecificDefaultLibraries>%(IgnoreSpecificDefaultLibraries)</IgnoreSpecificDefaultLibraries>
      <ImportLibrary>E:/Cpp_TEST/my_json_parser/build/RelWithDebInfo/parser_test.lib</ImportLibrary>
      <ProgramDataBaseFile>E:/Cpp_TEST/my_json_parser/build/RelWithDebInfo/parser_test.pdb</ProgramDataBaseFile>
      <SubSystem>Console</SubSystem>
    </Link>
    <ProjectReference>
      <LinkLibraryDependencies>false</LinkLibraryDependencies>
    </ProjectReference>
  </ItemDefinitionGroup>
  <ItemGroup>
    <CustomBuild Include="E:\Cpp_TEST\my_json_parser\CMakeLists.txt">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">Building Custom Rule E:/Cpp_TEST/my_json_parser/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">setlocal
E:\CMake\bin\cmake.exe -SE:/Cpp_TEST/my_json_parser -BE:/Cpp_TEST/my_json_parser/build --check-stamp-file E:/Cpp_TEST/my_json_parser/build/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">E:\CMake\share\cmake-3.23\Modules\CMakeCInformation.cmake;E:\CMake\share\cmake-3.23\Modules\CMakeCXXInformation.cmake;E:\CMake\share\cmake-3.23\Modules\CMakeCommonLanguageInclude.cmake;E:\CMake\share\cmake-3.23\Modules\CMakeGenericSystem.cmake;E:\CMake\share\cmake-3.23\Modules\CMakeInitializeConfigs.cmake;E:\CMake\share\cmake-3.23\Modules\CMakeLanguageInformation.cmake;E:\CMake\share\cmake-3.23\Modules\CMakeRCInformation.cmake;E:\CMake\share\cmake-3.23\Modules\CMakeSystemSpecificInformation.cmake;E:\CMake\share\cmake-3.23\Modules\CMakeSystemSpecificInitialize.cmake;E:\CMake\share\cmake-3.23\Modules\Compiler\CMakeCommonCompilerMacros.cmake;E:\CMake\share\cmake-3.23\Modules\Compiler\MSVC-C.cmake;E:\CMake\share\cmake-3.23\Modules\Compiler\MSVC-CXX.cmake;E:\CMake\share\cmake-3.23\Modules\FetchContent.cmake;E:\CMake\share\cmake-3.23\Modules\FetchContent\CMakeLists.cmake.in;E:\CMake\share\cmake-3.23\Modules\GoogleTest.cmake;E:\CMake\share\cmake-3.23\Modules\Platform\Windows-MSVC-C.cmake;E:\CMake\share\cmake-3.23\Modules\Platform\Windows-MSVC-CXX.cmake;E:\CMake\share\cmake-3.23\Modules\Platform\Windows-MSVC.cmake;E:\CMake\share\cmake-3.23\Modules\Platform\Windows.cmake;E:\CMake\share\cmake-3.23\Modules\Platform\WindowsPaths.cmake;E:\Cpp_TEST\my_json_parser\build\CMakeFiles\3.23.1\CMakeCCompiler.cmake;E:\Cpp_TEST\my_json_parser\build\CMakeFiles\3.23.1\CMakeCXXCompiler.cmake;E:\Cpp_TEST\my_json_parser\build\CMakeFiles\3.23.1\CMakeRCCompiler.cmake;E:\Cpp_TEST\my_json_parser\build\CMakeFiles\3.23.1\CMakeSystem.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">E:\Cpp_TEST\my_json_parser\build\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">Building Custom Rule E:/Cpp_TEST/my_json_parser/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">setlocal
E:\CMake\bin\cmake.exe -SE:/Cpp_TEST/my_json_parser -BE:/Cpp_TEST/my_json_parser/build --check-stamp-file E:/Cpp_TEST/my_json_parser/build/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">E:\CMake\share\cmake-3.23\Modules\CMakeCInformation.cmake;E:\CMake\share\cmake-3.23\Modules\CMakeCXXInformation.cmake;E:\CMake\share\cmake-3.23\Modules\CMakeCommonLanguageInclude.cmake;E:\CMake\share\cmake-3.23\Modules\CMakeGenericSystem.cmake;E:\CMake\share\cmake-3.23\Modules\CMakeInitializeConfigs.cmake;E:\CMake\share\cmake-3.23\Modules\CMakeLanguageInformation.cmake;E:\CMake\share\cmake-3.23\Modules\CMakeRCInformation.cmake;E:\CMake\share\cmake-3.23\Modules\CMakeSystemSpecificInformation.cmake;E:\CMake\share\cmake-3.23\Modules\CMakeSystemSpecificInitialize.cmake;E:\CMake\share\cmake-3.23\Modules\Compiler\CMakeCommonCompilerMacros.cmake;E:\CMake\share\cmake-3.23\Modules\Compiler\MSVC-C.cmake;E:\CMake\share\cmake-3.23\Modules\Compiler\MSVC-CXX.cmake;E:\CMake\share\cmake-3.23\Modules\FetchContent.cmake;E:\CMake\share\cmake-3.23\Modules\FetchContent\CMakeLists.cmake.in;E:\CMake\share\cmake-3.23\Modules\GoogleTest.cmake;E:\CMake\share\cmake-3.23\Modules\Platform\Windows-MSVC-C.cmake;E:\CMake\share\cmake-3.23\Modules\Platform\Windows-MSVC-CXX.cmake;E:\CMake\share\cmake-3.23\Modules\Platform\Windows-MSVC.cmake;E:\CMake\share\cmake-3.23\Modules\Platform\Windows.cmake;E:\CMake\share\cmake-3.23\Modules\Platform\WindowsPaths.cmake;E:\Cpp_TEST\my_json_parser\build\CMakeFiles\3.23.1\CMakeCCompiler.cmake;E:\Cpp_TEST\my_json_parser\build\CMakeFiles\3.23.1\CMakeCXXCompiler.cmake;E:\Cpp_TEST\my_json_parser\build\CMakeFiles\3.23.1\CMakeRCCompiler.cmake;E:\Cpp_TEST\my_json_parser\build\CMakeFiles\3.23.1\CMakeSystem.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">E:\Cpp_TEST\my_json_parser\build\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">Building Custom Rule E:/Cpp_TEST/my_json_parser/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">setlocal
E:\CMake\bin\cmake.exe -SE:/Cpp_TEST/my_json_parser -BE:/Cpp_TEST/my_json_parser/build --check-stamp-file E:/Cpp_TEST/my_json_parser/build/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">E:\CMake\share\cmake-3.23\Modules\CMakeCInformation.cmake;E:\CMake\share\cmake-3.23\Modules\CMakeCXXInformation.cmake;E:\CMake\share\cmake-3.23\Modules\CMakeCommonLanguageInclude.cmake;E:\CMake\share\cmake-3.23\Modules\CMakeGenericSystem.cmake;E:\CMake\share\cmake-3.23\Modules\CMakeInitializeConfigs.cmake;E:\CMake\share\cmake-3.23\Modules\CMakeLanguageInformation.cmake;E:\CMake\share\cmake-3.23\Modules\CMakeRCInformation.cmake;E:\CMake\share\cmake-3.23\Modules\CMakeSystemSpecificInformation.cmake;E:\CMake\share\cmake-3.23\Modules\CMakeSystemSpecificInitialize.cmake;E:\CMake\share\cmake-3.23\Modules\Compiler\CMakeCommonCompilerMacros.cmake;E:\CMake\share\cmake-3.23\Modules\Compiler\MSVC-C.cmake;E:\CMake\share\cmake-3.23\Modules\Compiler\MSVC-CXX.cmake;E:\CMake\share\cmake-3.23\Modules\FetchContent.cmake;E:\CMake\share\cmake-3.23\Modules\FetchContent\CMakeLists.cmake.in;E:\CMake\share\cmake-3.23\Modules\GoogleTest.cmake;E:\CMake\share\cmake-3.23\Modules\Platform\Windows-MSVC-C.cmake;E:\CMake\share\cmake-3.23\Modules\Platform\Windows-MSVC-CXX.cmake;E:\CMake\share\cmake-3.23\Modules\Platform\Windows-MSVC.cmake;E:\CMake\share\cmake-3.23\Modules\Platform\Windows.cmake;E:\CMake\share\cmake-3.23\Modules\Platform\WindowsPaths.cmake;E:\Cpp_TEST\my_json_parser\build\CMakeFiles\3.23.1\CMakeCCompiler.cmake;E:\Cpp_TEST\my_json_parser\build\CMakeFiles\3.23.1\CMakeCXXCompiler.cmake;E:\Cpp_TEST\my_json_parser\build\CMakeFiles\3.23.1\CMakeRCCompiler.cmake;E:\Cpp_TEST\my_json_parser\build\CMakeFiles\3.23.1\CMakeSystem.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">E:\Cpp_TEST\my_json_parser\build\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">Building Custom Rule E:/Cpp_TEST/my_json_parser/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">setlocal
E:\CMake\bin\cmake.exe -SE:/Cpp_TEST/my_json_parser -BE:/Cpp_TEST/my_json_parser/build --check-stamp-file E:/Cpp_TEST/my_json_parser/build/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">E:\CMake\share\cmake-3.23\Modules\CMakeCInformation.cmake;E:\CMake\share\cmake-3.23\Modules\CMakeCXXInformation.cmake;E:\CMake\share\cmake-3.23\Modules\CMakeCommonLanguageInclude.cmake;E:\CMake\share\cmake-3.23\Modules\CMakeGenericSystem.cmake;E:\CMake\share\cmake-3.23\Modules\CMakeInitializeConfigs.cmake;E:\CMake\share\cmake-3.23\Modules\CMakeLanguageInformation.cmake;E:\CMake\share\cmake-3.23\Modules\CMakeRCInformation.cmake;E:\CMake\share\cmake-3.23\Modules\CMakeSystemSpecificInformation.cmake;E:\CMake\share\cmake-3.23\Modules\CMakeSystemSpecificInitialize.cmake;E:\CMake\share\cmake-3.23\Modules\Compiler\CMakeCommonCompilerMacros.cmake;E:\CMake\share\cmake-3.23\Modules\Compiler\MSVC-C.cmake;E:\CMake\share\cmake-3.23\Modules\Compiler\MSVC-CXX.cmake;E:\CMake\share\cmake-3.23\Modules\FetchContent.cmake;E:\CMake\share\cmake-3.23\Modules\FetchContent\CMakeLists.cmake.in;E:\CMake\share\cmake-3.23\Modules\GoogleTest.cmake;E:\CMake\share\cmake-3.23\Modules\Platform\Windows-MSVC-C.cmake;E:\CMake\share\cmake-3.23\Modules\Platform\Windows-MSVC-CXX.cmake;E:\CMake\share\cmake-3.23\Modules\Platform\Windows-MSVC.cmake;E:\CMake\share\cmake-3.23\Modules\Platform\Windows.cmake;E:\CMake\share\cmake-3.23\Modules\Platform\WindowsPaths.cmake;E:\Cpp_TEST\my_json_parser\build\CMakeFiles\3.23.1\CMakeCCompiler.cmake;E:\Cpp_TEST\my_json_parser\build\CMakeFiles\3.23.1\CMakeCXXCompiler.cmake;E:\Cpp_TEST\my_json_parser\build\CMakeFiles\3.23.1\CMakeRCCompiler.cmake;E:\Cpp_TEST\my_json_parser\build\CMakeFiles\3.23.1\CMakeSystem.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">E:\Cpp_TEST\my_json_parser\build\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <ClCompile Include="E:\Cpp_TEST\my_json_parser\src\praser_lite.cpp" />
    <ClInclude Include="E:\Cpp_TEST\my_json_parser\src\include\praser_lite.h" />
    <ClCompile Include="E:\Cpp_TEST\my_json_parser\build\test.cpp" />
    <ClInclude Include="E:\Cpp_TEST\my_json_parser\src\j_context.h" />
    <ClCompile Include="E:\Cpp_TEST\my_json_parser\src\j_context.cpp" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="E:\Cpp_TEST\my_json_parser\build\ZERO_CHECK.vcxproj">
      <Project>{5E00D702-7279-38D3-88BA-975C3CCBD64C}</Project>
      <Name>ZERO_CHECK</Name>
      <ReferenceOutputAssembly>false</ReferenceOutputAssembly>
      <CopyToOutputDirectory>Never</CopyToOutputDirectory>
    </ProjectReference>
    <ProjectReference Include="E:\Cpp_TEST\my_json_parser\build\_deps\googletest-build\googletest\gtest.vcxproj">
      <Project>{EBDE2D77-ABBE-3A1A-ACF1-AD9B71FE0EBE}</Project>
      <Name>gtest</Name>
    </ProjectReference>
    <ProjectReference Include="E:\Cpp_TEST\my_json_parser\build\_deps\googletest-build\googletest\gtest_main.vcxproj">
      <Project>{0BCB949E-1A8F-3154-A4E1-8BB231BCD9E7}</Project>
      <Name>gtest_main</Name>
    </ProjectReference>
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
  </ImportGroup>
</Project>